*** Begin Patch
*** Update File: web-ready/src/main.jsx
@@
         )}
+        {Array.isArray(ribbonItems) && ribbonItems.some(x => x.status==='error' || (x.last_error && String(x.last_error).trim())) && (
+          <div style={{margin:'8px 0 12px', padding:'8px 10px', border:'1px solid rgba(255,100,100,.35)', background:'rgba(255,100,100,.08)', borderRadius:8}}>
+            <div style={{fontWeight:600, marginBottom:6}}>Integration issues</div>
+            <div style={{display:'flex', gap:8, flexWrap:'wrap'}}>
+              {ribbonItems.filter(x => x.status==='error' || (x.last_error && String(x.last_error).trim())).map((it,i)=>{
+                const type = String(it.type||'unknown');
+                const err = String(it.last_error||'error');
+                async function reset(){ try{ await apiPost(`/connectors/${encodeURIComponent(type)}/reset`,{}); alert(`${type}: reset requested`); }catch(_e){ alert(`${type}: reset failed`);} }
+                function reauth(){ window.location.href = `/integrations?reauth=${encodeURIComponent(type)}`; }
+                return (
+                  <span key={i} style={{display:'inline-flex', alignItems:'center', gap:8, padding:'6px 8px', border:'1px solid rgba(255,100,100,.45)', borderRadius:8, background:'rgba(255,255,255,.04)'}}>
+                    <span style={{fontWeight:600, textTransform:'uppercase'}}>{type}</span>
+                    <span style={{opacity:.85, fontSize:12}} title={err}>error</span>
+                    <button className="ghost" onClick={reauth} style={{padding:'4px 8px', borderRadius:8, border:'1px solid rgba(255,255,255,.2)', background:'transparent', color:'#e6e9ef', cursor:'pointer'}}>Re-auth</button>
+                    {(me?.is_super || me?.role==='owner') && (
+                      <button className="ghost" onClick={reset} style={{padding:'4px 8px', borderRadius:8, border:'1px solid rgba(255,255,255,.2)', background:'transparent', color:'#e6e9ef', cursor:'pointer'}}>Reset connector</button>
+                    )}
+                  </span>
+                );
+              })}
+            </div>
+          </div>
+        )}
         {Array.isArray(ribbonItems) && ribbonItems.length===0 && (
           <EmptyStateFx
             title="No integrations connected"
*** End Patch
